<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.fmis.finance.mapper.BizFinanceMapper">

    <select id="selectReceivableList" resultType="com.ruoyi.fmis.finance.domain.vo.ReceivableRespVo">
        select
        distinct q.data_id saleContractId,
        q.string1 saleContractNo,
        q.flow_status saleContractStatus,
        q.datetime1 signTime,
        q.string5 invoiceType ,
        q.string6 deliveryTime,
        q.string18 payType,
        q.price1 saleContractAmount,
        q.string8 payMethod,
        ct.name as customerName,
        q.string3 as supplierName,
        dt1.dept_name as deptName,
        -- 销售总量
        ifnull(bpc.saleQty,0) saleQty,
        -- 已付款项
        ifnull(bbc.paidAmount,0) paidAmount,
         -- 已开发票
         0 invoicedAmount,
         -- 已发货数
        ifnull(bpc1.deliveryQty,0) deliveryQty
        from biz_process_data q
        left join sys_user u on q.create_by=u.user_id
        left join sys_dept dt on u.dept_id=dt.dept_id
        left join biz_data_status ds on ds.string3=q.data_id
        left join biz_customer ct on ct.customer_id=q.string2
        left join sys_dept dt1 on q.string22=dt1.dept_id
        left join (select data_id,sum(string3) saleQty from biz_process_child group by data_id) bpc ON bpc.data_id = q.data_id
        left join (select string5,sum(string13) deliveryQty from biz_process_child group by string5) bpc1 ON bpc1.string5 = q.string1
        left join (select data_id,sum(amount) as paidAmount  from biz_bill_contract group by data_id) bbc on bbc.data_id=q.data_id
        <include refid="ReceivableWhere"></include>
        order by q.create_time desc
    </select>

    <sql id="ReceivableWhere">
        <where>
            q.biz_id='contract'
            <if test="saleContractNo != null and saleContractNo != ''">
                and q.string1 like concat('%', #{saleContractNo}, '%')
            </if>
        </where>
    </sql>


    <select id="selectStandAccountList" resultType="com.ruoyi.fmis.finance.domain.vo.StandAccountRespVo">
        select
        distinct q.data_id purchaseContractId,
        q.string1 chargeCompany,
        q.string12 purchaseContractNo,
        q.string2 deptName,
        q.datetime2 deliveryDate,
        q.datetime3 outDate,
        q.price1 as contractAmount,
        q.string11 as purchaseStatus,
        q.string20 as payWay,
        s.name supplierName,
        -- 到货数量
        ifnull(stn.arrivalQty,0) arrivalQty,
        -- 到货货款
        ifnull(stnprice.arrivalAmount,0) arrivalAmount,
        -- 已付货款
        ifnull(p.paidAmount,0) paidAmount
        from biz_process_data q
        left join biz_suppliers s on s.suppliers_id=q.string6
        left join (select contract_id,sum(apply_amount) as paidAmount  from biz_pay_plan where status=1 group by contract_id) p on p.contract_id=q.data_id
        left join (select string4,sum(string1) as arrivalQty from biz_data_stestn  group by string4) stn on stn.string4=q.data_id
        left join (select a.string4,sum(a.string1*ba.string6) arrivalAmount from biz_data_stestn a left join biz_process_child b on a.string5=b.child_id left join biz_actuator ba on ba.actuator_id=b.string11  group by a.string4) stnprice on stnprice.string4=q.data_id

        <include refid="standAccountWhere"></include>
        order by q.create_time desc
    </select>
    <select id="selectStandAccountSummaryList"
            resultType="com.ruoyi.fmis.finance.domain.vo.StandAccountSummaryRespVo">
      select total.needCompany,
        total.supplierName,
        -- 累计欠款额
        ifnull(sum(total.contractAmount),0) - ifnull(sum(total.paidAmount),0) totalArrearsAmount,
        -- 累计订货额
        ifnull(sum(total.contractAmount),0) totalContractAmount,
        -- 累计入账额
        ifnull(sum(total.arrivalAmount),0) totalAccountAmount,
        -- 已付货款
        ifnull(sum(total.paidAmount),0) paidAmount,
        -- 计划付款额
        ifnull(sum(total.planPayAmount),0) planPayAmount
        from (select * from(select
        q.string1 needCompany,
        q.price1 as contractAmount,
        s.name supplierName,
        -- 到货入账额
        ifnull(stnprice.arrivalAmount,0) arrivalAmount,
        -- 已付货款
        ifnull(p.paidAmount,0) paidAmount,
        ifnull(p1.planPayAmount,0) planPayAmount
      	from biz_pay_plan bpp
        left join biz_process_data q on q.data_id=bpp.contract_id
        left join biz_suppliers s on s.suppliers_id=q.string6
        left join (select contract_id,sum(apply_amount) as paidAmount  from biz_pay_plan where status=1 group by contract_id) p on p.contract_id=q.data_id
        left join (select contract_id,sum(apply_amount) as planPayAmount  from biz_pay_plan where status=0 group by contract_id) p1 on p1.contract_id=q.data_id
        left join (select string4,sum(string1) as arrivalQty from biz_data_stestn  group by string4) stn on stn.string4=q.data_id
        left join (select a.string4,sum(a.string1*ba.string6) arrivalAmount from biz_data_stestn a left join biz_process_child b on a.string5=b.child_id left join biz_actuator ba on ba.actuator_id=b.string11  group by a.string4) stnprice on stnprice.string4=q.data_id
         ) a
         -- 已经付完款的合同不统计
         where a.contractAmount > a.paidAmount) total
         group by total.needCompany,total.supplierName
    </select>

    <sql id="standAccountWhere">
        <where>
            q.biz_id='procurement'
            <if test="purchaseContractNo != null and purchaseContractNo != ''">
                and q.string12 like concat('%', #{purchaseContractNo}, '%')
            </if>
        </where>
    </sql>


</mapper>