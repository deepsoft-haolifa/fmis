<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.fmis.child.mapper.BizProcessChildMapper">

    <resultMap type="BizProcessChild" id="BizProcessChildResult">
        <result property="childId" column="child_id"/>
        <result property="guishudanwei" column="guishudanwei"/>
        <result property="dataId" column="data_id"/>
        <result property="remark" column="remark"/>
        <result property="price1" column="price1"/>
        <result property="price2" column="price2"/>
        <result property="price3" column="price3"/>
        <result property="price4" column="price4"/>
        <result property="price5" column="price5"/>
        <result property="price6" column="price6"/>
        <result property="price7" column="price7"/>
        <result property="price8" column="price8"/>
        <result property="price9" column="price9"/>
        <result property="price10" column="price10"/>
        <result property="string1" column="string1"/>
        <result property="string2" column="string2"/>
        <result property="string3" column="string3"/>
        <result property="string4" column="string4"/>
        <result property="string5" column="string5"/>
        <result property="string6" column="string6"/>
        <result property="string7" column="string7"/>
        <result property="string8" column="string8"/>
        <result property="string9" column="string9"/>
        <result property="string10" column="string10"/>
        <result property="string11" column="string11"/>
        <result property="string12" column="string12"/>
        <result property="string13" column="string13"/>
        <result property="string14" column="string14"/>
        <result property="string15" column="string15"/>
        <result property="string16" column="string16"/>
        <result property="string17" column="string17"/>
        <result property="string18" column="string18"/>
        <result property="string19" column="string19"/>
        <result property="string20" column="string20"/>
        <result property="datetime1" column="datetime1"/>
        <result property="datetime2" column="datetime2"/>
        <result property="datetime3" column="datetime3"/>
        <result property="datetime4" column="datetime4"/>
        <result property="datetime5" column="datetime5"/>
        <result property="status" column="status"/>
        <result property="delFlag" column="del_flag"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="pressure" column="press"/>
        <result property="color" column="color"/>
    </resultMap>

    <sql id="selectBizProcessChildVo">
        select child_id, data_id, remark, price1, price2, price3, price4, price5, price6, price7, price8, price9, price10, string1, string2, string3, string4, string5, string6, string7, string8, string9, string10, string11, string12, string13, string14, string15, string16, string17, string18, string19, string20, datetime1, datetime2, datetime3, datetime4, datetime5, status, del_flag, create_by, create_time, update_by, update_time from biz_process_child
    </sql>

    <select id="selectBizProcessChildList" parameterType="BizProcessChild" resultMap="BizProcessChildResult">
        <include refid="selectBizProcessChildVo"/>
        <where>
            <if test="dataId != null ">and data_id = #{dataId}</if>
            <if test="price1 != null ">and price1 = #{price1}</if>
            <if test="price2 != null ">and price2 = #{price2}</if>
            <if test="price3 != null ">and price3 = #{price3}</if>
            <if test="price4 != null ">and price4 = #{price4}</if>
            <if test="price5 != null ">and price5 = #{price5}</if>
            <if test="price6 != null ">and price6 = #{price6}</if>
            <if test="price7 != null ">and price7 = #{price7}</if>
            <if test="price8 != null ">and price8 = #{price8}</if>
            <if test="price9 != null ">and price9 = #{price9}</if>
            <if test="price10 != null ">and price10 = #{price10}</if>
            <if test="string1 != null  and string1 != ''">and string1 = #{string1}</if>
            <if test="string2 != null  and string2 != ''">and string2 = #{string2}</if>
            <if test="string3 != null  and string3 != ''">and string3 = #{string3}</if>
            <if test="string4 != null  and string4 != ''">and string4 = #{string4}</if>
            <if test="string5 != null  and string5 != ''">and string5 = #{string5}</if>
            <if test="string6 != null  and string6 != ''">and string6 = #{string6}</if>
            <if test="string7 != null  and string7 != ''">and string7 = #{string7}</if>
            <if test="string8 != null  and string8 != ''">and string8 = #{string8}</if>
            <if test="string9 != null  and string9 != ''">and string9 = #{string9}</if>
            <if test="string10 != null  and string10 != ''">and string10 = #{string10}</if>
            <if test="string11 != null  and string11 != ''">and string11 = #{string11}</if>
            <if test="string12 != null  and string12 != ''">and string12 = #{string12}</if>
            <if test="string13 != null  and string13 != ''">and string13 = #{string13}</if>
            <if test="string14 != null  and string14 != ''">and string14 = #{string14}</if>
            <if test="string15 != null  and string15 != ''">and string15 = #{string15}</if>
            <if test="string16 != null  and string16 != ''">and string16 = #{string16}</if>
            <if test="string17 != null  and string17 != ''">and string17 = #{string17}</if>
            <if test="string18 != null  and string18 != ''">and string18 = #{string18}</if>
            <if test="string19 != null  and string19 != ''">and string19 = #{string19}</if>
            <if test="string20 != null  and string20 != ''">and string20 = #{string20}</if>
            <if test="datetime1 != null ">and datetime1 = #{datetime1}</if>
            <if test="datetime2 != null ">and datetime2 = #{datetime2}</if>
            <if test="datetime3 != null ">and datetime3 = #{datetime3}</if>
            <if test="datetime4 != null ">and datetime4 = #{datetime4}</if>
            <if test="datetime5 != null ">and datetime5 = #{datetime5}</if>
        </where>
    </select>
    <select id="selectBizProcessChildListForKuCun" parameterType="BizProcessChild" resultMap="BizProcessChildResult">
        <include refid="selectBizProcessChildVo"/>
        <where>
            <if test="dataId != null ">and data_id = #{dataId}</if>
            <if test="price1 != null ">and price1 = #{price1}</if>
            <if test="price2 != null ">and price2 = #{price2}</if>
            <if test="price3 != null ">and price3 = #{price3}</if>
            <if test="price4 != null ">and price4 = #{price4}</if>
            <if test="price5 != null ">and price5 = #{price5}</if>
            <if test="price6 != null ">and price6 = #{price6}</if>
            <if test="price7 != null ">and price7 = #{price7}</if>
            <if test="price8 != null ">and price8 = #{price8}</if>
            <if test="price9 != null ">and price9 = #{price9}</if>
            <if test="price10 != null ">and price10 = #{price10}</if>
            <if test="string1 != null  and string1 != ''">and string1 = #{string1}</if>
            <if test="string2 != null  and string2 != ''">and string2 = #{string2}</if>
            <if test="string3 != null  and string3 != ''">and string3 = #{string3}</if>
            <if test="string4 != null  and string4 != ''">and string4 = #{string4}</if>
            <if test="string5 != null  and string5 != ''">and string5 = #{string5}</if>
            <if test="string6 != null  and string6 != ''">and string6 = #{string6}</if>
            <if test="string7 != null  and string7 != ''">and string7 = #{string7}</if>
            <if test="string8 != null  and string8 != ''">and string8 = #{string8}</if>
            <if test="string9 != null  and string9 != ''">and string9 = #{string9}</if>
            <if test="string10 != null  and string10 != ''">and string10 = #{string10}</if>
            <if test="string11 != null  and string11 != ''">and string11 = #{string11}</if>
            <if test="string12 != null  and string12 != ''">and string12 = #{string12}</if>
            <if test="string13 != null  and string13 != ''">and string13 = #{string13}</if>
            <if test="string14 != null  and string14 != ''">and string14 = #{string14}</if>
            <if test="string15 != null  and string15 != ''">and string15 = #{string15}</if>
            <if test="string16 != null  and string16 != ''">and string16 = #{string16}</if>
            <if test="string17 != null  and string17 != ''">and string17 = #{string17}</if>
            <if test="string18 != null  and string18 != ''">and string18 = #{string18}</if>
            <if test="string19 != null  and string19 != ''">and string19 = #{string19}</if>
            <if test="string20 != null  and string20 != ''">and string20 = #{string20}</if>
            <if test="datetime1 != null ">and datetime1 = #{datetime1}</if>
            <if test="datetime2 != null ">and datetime2 = #{datetime2}</if>
            <if test="datetime3 != null ">and datetime3 = #{datetime3}</if>
            <if test="datetime4 != null ">and datetime4 = #{datetime4}</if>
            <if test="datetime5 != null ">and datetime5 = #{datetime5}</if>
        </where>
        and data_id = 0;
    </select>

    <!-- 库存查看 -->
    <sql id="selectBizProcessChildInventoryVo">
        select c.child_id, c.data_id, c.remark, c.price1, c.price2, c.price3, c.price4,
        c.price5, c.price6, c.price7, c.price8, c.price9, c.price10, c.string1, c.string2,
        c.string3, c.string4, c.string5, c.string6, c.string7, c.string8, c.string9, c.string10,
        sum(c.string11) string11, c.string12, c.string13, c.string14, c.string15, c.string16, c.string17,
        c.string18, c.string19, c.string20, c.datetime1, c.datetime2, c.datetime3, c.datetime4,
        c.datetime5, c.status, c.del_flag, c.create_by, c.create_time, c.update_by, c.update_time
        from biz_process_child c

    </sql>

    <select id="selectBizProcessChildInventoryList" parameterType="BizProcessChild" resultMap="BizProcessChildResult">
        <include refid="selectBizProcessChildInventoryVo"/>
        <where>
            1=1
            <!-- 合同中合计的数量 -->
            <if test="string7 != null  and string7 != ''">and ifnull(string13,0)=0 and c.data_id=0</if>
            <if test="string6 != null  and string6 != ''">and concat(string5,',') like concat('%', #{string5}, '%') and ifnull(string14,'0') = '1' and ifnull(string13,0) > 0 and string20='0'</if>
            <!-- 审核通过的发货 -->
            <if test="string8 != null  and string8 != ''">
                and c.data_id in (select data_id from biz_process_data where biz_id='newdelivery' and normal_flag=flow_status)
            </if>
            <if test="dataId != null">and data_id = #{dataId}</if>

            <if test="string3 != null  and string3 != ''"> and c.string3 like concat('%', #{string3}, '%')</if>
            <if test="string4 != null  and string4 != ''"> and c.string4 like concat('%', #{string4}, '%')</if>
            <if test="string5 != null  and string5 != ''"> and c.string5 like concat('%', #{string5}, '%')</if>
            <if test="productName != null  and productName != ''"> and c.string6 like concat('%', #{productName}, '%')</if>
        </where>
        group by c.string4,c.string7,c.string8,c.string5
        order by c.create_time desc
    </select>

    <select id="selectBizProcessChildById" parameterType="Long" resultMap="BizProcessChildResult">
        <include refid="selectBizProcessChildVo"/>
        where child_id = #{childId}
    </select>


    <sql id="selectBizQuotationProductVo">

    select pd.string1 contractNo,q.quotation_id as quotationId,
          q.special_expenses,q.payment_method,q.freight,q.lead_time,q.report_project,q.normal_flag,q.flow_status,q.remark,q.string1 as quotationName,
          q.string2,q.string3,q.string4,q.string5,q.string6,q.string7,q.string8,q.string9,q.string10,q.status,q.del_flag,u.user_name as create_by,
          q.create_time,q.update_by,q.update_time,
          ct.name as customerName,pc.child_id as childId,
          pc.string2 as productId,pc.string5 as productRef1Id,pc.string6 as productRef1Num,pc.string8 as productRef2Id,pc.string9 as productRef2Num,pc.string11 as actuatorId,
          pc.string3 as productNum,pc.string4 as productCoefficient,pc.string7 as productRef1Coefficient,
          pc.string10 as productRef2Coefficient,pc.string12 as actuatorNum,pc.string13 as actuatorCoefficient,
          pr1.name as ref1Name,pr2.name as ref2Name,p.name as productName,ac.name as actuatorName,
          p.price as productPrice,pr1.price as ref1Price,pr2.price as ref2Price,ac.price as actuatorPrice,

          d.name as series, p.model, d1.name as specifications, d2.name as nominalPressure,
          d3.name as connectionType, d6.name as valvebodyMaterial,
          d4.name as sealingMaterial, d5.name as valveElement,
          d7.name as driveForm,d8.name as structuralStyle,
          s.name as supplier, p.new_supplier,
          p.medium,p.temperature,p.other,d9.name as productString1,
          p.string2 as productString2,ac.name as actuatorName,pc.string14,pc.string15,pc.string20,
          /*dd.dict_label as levelLabel,*/



          pa.attachment_id as pattachmentId,pa.bh as pattachmentName, pc.pattachment_price as pattachmentPrice, pc.pattachment_count as pattachmentCount, pc.pattachment_coefficient as pattachmentCoefficient,
          pa1.attachment_id as pattachment1Id,pa1.bh as pattachment1Name, pc.pattachment1_price as pattachment1Price, pc.pattachment1_count as pattachment1Count, pc.pattachment1_coefficient as pattachment1Coefficient,
          pa2.attachment_id as pattachment2Id,pa2.bh as pattachment2Name, pc.pattachment2_price as pattachment2Price, pc.pattachment2_count as pattachment2Count, pc.pattachment2_coefficient as pattachment2Coefficient,
          pa3.attachment_id as pattachment3Id,pa3.bh as pattachment3Name, pc.pattachment3_price as pattachment3Price, pc.pattachment3_count as pattachment3Count, pc.pattachment3_coefficient as pattachment3Coefficient,
          pa4.attachment_id as pattachment4Id,pa4.bh as pattachment4Name, pc.pattachment4_price as pattachment4Price, pc.pattachment4_count as pattachment4Count, pc.pattachment4_coefficient as pattachment4Coefficient,

          p.cost_price as productCostPrice,pr1.string3 as ref1CostPrice,pr2.string3 as ref2CostPrice,
          pa.cost_price as pattachmentCostPrice,pa1.cost_price as pattachment1CostPrice,
          pa2.cost_price as pattachment2CostPrice,pa3.cost_price as pattachment3CostPrice,pa4.cost_price as pattachment4CostPrice,
          (case when ac.string2 = '1' then ifnull(ac.string9,'0') when ac.string2 = '2' then ifnull(ac.string9,'0') end) as actuatorCostPrice


        from biz_process_child pc
        join biz_process_data pd on pc.data_id=pd.data_id
        left join biz_quotation q on q.quotation_id=pc.string1
        left join biz_product p on pc.string2=p.product_id
        left join biz_product_ref pr1 on pr1.product_ref_id=pc.string5
        left join biz_product_ref pr2 on pr2.product_ref_id=pc.string8
        left join biz_actuator ac on ac.actuator_id=pc.string11
        left join sys_user u on q.create_by=u.user_id
        left join sys_dept dt on u.dept_id=dt.dept_id
        left join biz_customer ct on ct.customer_id=q.string2

        left join biz_dict d on  d.parent_id=1 and p.series=d.dict_id
        left join biz_dict d1 on d1.parent_type='specification' and d1.dict_id=p.specifications
        left join biz_dict d2 on d2.parent_type='nominal_pressure' and d2.dict_id=p.nominal_pressure
        left join biz_dict d3 on d3.parent_type='link_type' and d3.dict_id=p.connection_type
        left join biz_dict d4 on d4.parent_type='sealing_material' and d4.dict_id=p.sealing_material
        left join biz_dict d5 on d5.parent_type='spool_material' and d5.dict_id=p.valve_element
        left join biz_dict d6 on d6.parent_type='body_material' and d6.dict_id=p.valvebody_material
        left join biz_dict d7 on d7.parent_type='drive_mode' and d7.dict_id=p.drive_form
        left join biz_dict d8 on d8.parent_type='structural_type' and d8.dict_id=p.structural_style
        left join biz_dict d9 on d9.parent_type='series_type' and d9.dict_id=p.string1
        left join biz_suppliers s on s.suppliers_id=p.supplier

        left join biz_product_attachment pa on pa.attachment_id=pc.pattachment_id
        left join biz_product_attachment pa1 on pa1.attachment_id=pc.pattachment1_id
        left join biz_product_attachment pa2 on pa2.attachment_id=pc.pattachment2_id
        left join biz_product_attachment pa3 on pa3.attachment_id=pc.pattachment3_id
        left join biz_product_attachment pa4 on pa4.attachment_id=pc.pattachment4_id

        /*left join sys_dict_data dd on dd.dict_type='product_level' and dd.dict_value=p.string2*/

    </sql>
    <!-- 流程状态0=未上报  1=销售员上报  2=销售经理同意 -2=销售经理不同意 3=区域经理同意 -3=区域经理不同意 4=副总同意 -4=副总不同意 5=老总同意 -5=老总不同意 -->
    <select id="selectBizQuotationProductList" parameterType="BizProcessChild" resultMap="BizProcessChildResult">
        <include refid="selectBizQuotationProductVo"/>
        <where>
            1=1
            <if test="dataId != null">and pc.data_id = #{dataId}</if>

            <!-- 产品等级 是 A,B的 -->
            <if test="levelAB == '1'">and p.string2 in ('A','B')</if>
            <if test="levelAB == '2'">and p.string2 in ('B','C')</if>


        </where>
        order by pc.child_id
    </select>


    <!-- 采购池产品信息 -->
    <sql id="selectBizChildProductVo">
        select pd.string3 guishudanwei,
        p.price as productPrice,p.product_id as productId,
        d.name as series, p.model, d1.name as specifications, d2.name as nominalPressure,
        d3.name as connectionType, d6.name as valvebodyMaterial,
        d4.name as sealingMaterial, d5.name as valveElement,
        d7.name as driveForm,d8.name as structuralStyle,
        s.name as supplierName,
        p.medium,p.temperature,p.other,d9.name as productString1,
        p.string2 as productString2,
        /*dd.dict_label as levelLabel,*/(case when ds.data_status='1' then ds.string1 else sum(pc.string3) end) as productNum,p.name as productName,
        s.name as supplier,p.procurement_price as productProcurementPrice,pd.string6 as goodsTime,
        ds.product_status as productStatus,ds.actuator_status as actuatorStatus,ds.ref1_status as ref1Status,ds.ref2_status as ref2Status,ds.p_status as pStatus,
        ds.p1_status as p1Status,ds.p2_status as p2Status,ds.p3_status as p3Status,ds.p4_status as p4Status,pc.data_id as dataId,pc.child_id as childId,ds.data_status as dataStatus,
        ds.string4 as procurementId,'A' as levelValue,s.suppliers_id as supplierId,pd.string1 as contractNo,pd.string25 as contractSpecial
        from biz_product p
        join biz_process_child pc on pc.data_id=#{dataId} and pc.string2=p.product_id
        join biz_process_data pd on pc.data_id=pd.data_id
        left join biz_data_status ds on ds.child_id=pc.child_id and ds.string2=p.product_id
        left join biz_dict d on  d.parent_id=1 and p.series=d.dict_id
        left join biz_dict d1 on d1.parent_type='specification' and d1.dict_id=p.specifications
        left join biz_dict d2 on d2.parent_type='nominal_pressure' and d2.dict_id=p.nominal_pressure
        left join biz_dict d3 on d3.parent_type='link_type' and d3.dict_id=p.connection_type
        left join biz_dict d4 on d4.parent_type='sealing_material' and d4.dict_id=p.sealing_material
        left join biz_dict d5 on d5.parent_type='spool_material' and d5.dict_id=p.valve_element
        left join biz_dict d6 on d6.parent_type='body_material' and d6.dict_id=p.valvebody_material
        left join biz_dict d7 on d7.parent_type='drive_mode' and d7.dict_id=p.drive_form
        left join biz_dict d8 on d8.parent_type='structural_type' and d8.dict_id=p.structural_style
        left join biz_dict d9 on d9.parent_type='series_type' and d9.dict_id=p.string1
        left join biz_suppliers s on s.suppliers_id=p.supplier
        /*join sys_dict_data dd on dd.dict_type='product_level' and dd.dict_value=p.string2*/
        where <!--concat(p.model,p.specifications) in (
      select concat(p1.model,p1.specifications) from biz_product p1
      join biz_process_child pc1 on pc1.data_id=#{dataId} and pc1.string2=p1.product_id
        <if test="supplierId != null and supplierId != ''">and p1.supplier=#{supplierId} </if>
    ) -->
        1=1
    </sql>
    <select id="selectBizChildProductList" parameterType="BizProcessChild" resultMap="BizProcessChildResult">
        <include refid="selectBizChildProductVo"/>
        <!-- 如果是详情，只看有数据 || bizEditFlag == 1-->

        <if test="bizEditFlag == 0 ">and ifnull(ds.data_status,'0') = '0'</if>

        <if test="bizEditFlag == 2">and ds.string4 = #{procurementId} </if>
        <if test="dataStatus == 1">and ds.data_status = #{dataStatus} </if>
        <if test="dataStatus == -1">and ds.data_status is null </if>

        <if test="supplierId != null and supplierId != ''">and s.suppliers_id=#{supplierId} </if>

        <!-- 备选产品信息 暂时不做 -->
        <if test="levelValue == -2"> and </if>

        group by p.product_id
        order by p.string2,p.new_supplier,productNum desc
    </select>


    <!-- 质检 产品列表 (COALESCE(sum(ss.num),0)-COALESCE(sum(sn.string1),0)-COALESCE(sum(sn.string2),0))-->
    <sql id="selectBizTestProductVo">
    select
          bpc.string15 color,p.price as productPrice,p.product_id as productId,ds.string4 as dataId,ds.child_id as childId,sn.remark,ds.status_id as statusId,
          d.name as series, p.model, d1.name as specifications, d2.name as nominalPressure,
          d3.name as connectionType, d6.name as valvebodyMaterial,
          d4.name as sealingMaterial, d5.name as valveElement,
          d7.name as driveForm,d8.name as structuralStyle,
          s.name as supplierName,
          p.medium,p.temperature,p.other,d9.name as productString1,
          p.string2 as productString2,
          ds.string1 as productNum,p.name as productName,
          s.name as supplier,p.procurement_price as productProcurementPrice,
          ds.product_status as productStatus,
          ds.data_status as dataStatus,
          p.string2 as levelValue,s.suppliers_id as supplierId,
          COALESCE(sum(sn.string1),0) as yesNum, COALESCE(sum(sn.string2),0) as noNum,ss.num as stayNum,ss.create_time as stayCreateTime,ss.stay_id as stayId,ss.string6 as orderNo,
          da1.string1 as contractNo,da.string12 as procurementNo,da1.string25 as contractSpecial
    from biz_product p
      join biz_data_status ds on   ds.string2=p.product_id and ds.string4=#{dataId} and ds.type=1
     left join biz_data_steststay ss on ss.status_id=ds.status_id

     left join biz_process_data da on ss.string4=da.data_id
     left join biz_process_data da1 on ds.string3=da1.data_id

     left join biz_data_stestn sn on sn.status_id=ds.status_id  and sn.string6=ss.stay_id
    left join biz_dict d on  d.parent_id=1 and p.series=d.dict_id
        left join biz_dict d1 on d1.parent_type='specification' and d1.dict_id=p.specifications
        left join biz_dict d2 on d2.parent_type='nominal_pressure' and d2.dict_id=p.nominal_pressure
        left join biz_dict d3 on d3.parent_type='link_type' and d3.dict_id=p.connection_type
        left join biz_dict d4 on d4.parent_type='sealing_material' and d4.dict_id=p.sealing_material
        left join biz_dict d5 on d5.parent_type='spool_material' and d5.dict_id=p.valve_element
        left join biz_dict d6 on d6.parent_type='body_material' and d6.dict_id=p.valvebody_material
        left join biz_dict d7 on d7.parent_type='drive_mode' and d7.dict_id=p.drive_form
        left join biz_dict d8 on d8.parent_type='structural_type' and d8.dict_id=p.structural_style
        left join biz_dict d9 on d9.parent_type='series_type' and d9.dict_id=p.string1
        left join biz_suppliers s on s.suppliers_id=p.supplier
        left join biz_process_child bpc on ds.child_id = bpc.child_id
    where 1=1
    </sql>
    <select id="selectBizTestProductList" parameterType="BizProcessChild" resultMap="BizProcessChildResult">
        <include refid="selectBizTestProductVo"/>
        <if test="orderNo != null">and ss.string6 like concat('%', #{orderNo}, '%')</if>
        <if test="contractNo != null">and da.string10 like concat('%', #{contractNo}, '%')</if>
        <if test="procurementNo != null">and da.string12 like concat('%', #{procurementNo}, '%')</if>

        <if test="queryStatus == 0">and ss.string1 = '0' group by ss.stay_id order by ss.create_time</if>
        <if test="queryStatus == null">group by ds.status_id order by p.string2,p.new_supplier</if>
    </select>


    <!-- 采购池 执行器信息 -->
    <sql id="selectBizChildActuatorVo">
        select pd.string3 guishudanwei,
        (case when ds.data_status='1' then ds.string1 else sum(pc.string12) end) as actuatorNum,
        pc.string13 as actuatorCoefficient,
        a.name as actuatorName,a.price as actuatorPrice,a.actuator_id as actuatorId,
        a.brand as actuatorBrand,a.manufacturer as actuatorManufacturer,a.string4 as actuatorString4,
        a.string1 as actuatorString1,a.setup_type as actuatorSetupType,a.output_torque as actuatorOutputTorque,
        a.string3 as actuatorString3,a.action_type as actuatorActionType,a.control_circuit as actuatorControlCircuit,a.adaptable_voltage as actuatorAdaptableVoltage,
        a.protection_level as actuatorProtectionLevel,a.quality_level as actuatorQualityLevel,a.explosion_level as actuatorExplosionLevel,a.string6 as actuatorString6,
        pd.string6 as goodsTime,
        ds.product_status as productStatus,ds.actuator_status as actuatorStatus,ds.ref1_status as ref1Status,ds.ref2_status as ref2Status,ds.p_status as pStatus,
        ds.p1_status as p1Status,ds.p2_status as p2Status,ds.p3_status as p3Status,ds.p4_status as p4Status,pc.data_id as dataId,pc.child_id as childId,ds.data_status as dataStatus,
        ds.string4 as procurementId,'A' as levelValue,s.suppliers_id as supplierId,s.name as supplierName,pd.string1 as contractNo,pd.string25 as contractSpecial
        from biz_actuator a
        join biz_process_child pc on pc.data_id=#{dataId} and pc.string11=a.actuator_id
        join biz_process_data pd on pc.data_id=pd.data_id
        left join biz_suppliers s on s.suppliers_id=a.string10
        left join biz_data_status ds on ds.child_id=pc.child_id and ds.string2=a.actuator_id
        where
        <!--
        a.string1 in (
      select a1.string1 from biz_actuator a1
      join biz_process_child pc1 on pc1.data_id=#{dataId} and pc1.string11=a1.actuator_id
        <if test="supplierId != null and supplierId != ''">and a1.string10=#{supplierId} </if>
    ) and a.quality_level=#{levelLabel}-->

        1=1
    </sql>
    <select id="selectBizChildActuatorList" parameterType="BizProcessChild" resultMap="BizProcessChildResult">
        <include refid="selectBizChildActuatorVo"/>
        <if test="bizEditFlag == 0">and ifnull(ds.data_status,'0') = '0'</if>
        <!-- 如果是详情，只看有数据 -->
        <if test="bizEditFlag == 2">and ds.string4 = #{procurementId} </if>
        <if test="dataStatus == 1">and ds.data_status = #{dataStatus} </if>
        <if test="dataStatus == -1">and ds.data_status is null </if>
        <if test="supplierId != null and supplierId != ''">and s.suppliers_id=#{supplierId} </if>
        group by a.actuator_id
        order by a.quality_level,a.string4
    </select>


    <!-- 质检 执行器信息 -->
    <sql id="selectBizTestActuatorVo">
    select
      ds.string1 as actuatorNum,sn.remark,a.press as pressure,a.color,a.string5,
          a.name as actuatorName,a.price as actuatorPrice,a.actuator_id as actuatorId,ds.string4 as dataId,ds.child_id as childId,ds.status_id as statusId,
          a.brand as actuatorBrand,a.manufacturer as actuatorManufacturer,a.string4 as actuatorString4,
          a.string1 as actuatorString1,a.setup_type as actuatorSetupType,a.output_torque as actuatorOutputTorque,
          a.string3 as actuatorString3,a.action_type as actuatorActionType,a.control_circuit as actuatorControlCircuit,a.adaptable_voltage as actuatorAdaptableVoltage,
          a.protection_level as actuatorProtectionLevel,a.quality_level as actuatorQualityLevel,a.explosion_level as actuatorExplosionLevel,a.string6 as actuatorString6,
          ds.product_status as productStatus,ds.actuator_status as actuatorStatus,
          ds.string4 as procurementId,a.quality_level as levelValue,s.suppliers_id as supplierId,s.name as supplierName,
          COALESCE(sum(sn.string1),0) as yesNum, COALESCE(sum(sn.string2),0) as noNum,ss.num as stayNum,ss.create_time as stayCreateTime,ss.stay_id as stayId,ss.string6 as orderNo,
          da1.string1 as contractNo,da.string12 as procurementNo,da1.string25 as contractSpecial
          from biz_actuator a
    join biz_data_status ds on   ds.string2=a.actuator_id and ds.string4=#{dataId} and ds.type=2
      left join biz_data_steststay ss on ss.status_id=ds.status_id
      left join biz_process_data da on ss.string4=da.data_id
      left join biz_process_data da1 on ds.string3=da1.data_id
      left join biz_data_stestn sn on sn.status_id=ds.status_id  and sn.string6=ss.stay_id
    left join biz_suppliers s on s.suppliers_id=a.string10

    where 1=1
    </sql>
    <select id="selectBizTestActuatorList" parameterType="BizProcessChild" resultMap="BizProcessChildResult">
        <include refid="selectBizTestActuatorVo"/>
        <if test="orderNo != null">and ss.string6 like concat('%', #{orderNo}, '%')</if>
        <if test="contractNo != null">and da.string10 like concat('%', #{contractNo}, '%')</if>
        <if test="procurementNo != null">and da.string12 like concat('%', #{procurementNo}, '%')</if>
        <if test="queryStatus == 0">and ss.string1 = '0' group by ss.stay_id order by ss.create_time</if>
        <if test="queryStatus == null">group by ds.status_id order by a.quality_level,a.string4</if>
    </select>




    <!-- 采购池 法兰信息 -->
    <sql id="selectBizChildRef1Vo">
        select pd.string3 guishudanwei,
        pr.product_ref_id as productRef1Id,
        (case when ds.data_status='1' then ds.string1 else sum(pc.string6) end)  as productRef1Num,
        pc.string7 as productRef1Coefficient,
        pr.name as ref1Name,pr.price as ref1Price,
        pr.string2 as ref1String2,d1.name as  ref1Specifications,d2.name  as ref1ValvebodyMaterial,
        pr.material_require as ref1MaterialRequire,s.name as  suppliersName,pr.model,pd.string6 as goodsTime,
        ds.product_status as productStatus,ds.actuator_status as actuatorStatus,ds.ref1_status as ref1Status,ds.ref2_status as ref2Status,ds.p_status as pStatus,
        ds.p1_status as p1Status,ds.p2_status as p2Status,ds.p3_status as p3Status,ds.p4_status as p4Status,pc.data_id as dataId,pc.child_id as childId,ds.data_status as dataStatus,
        ds.string4 as procurementId,'A' as levelValue,s.suppliers_id as supplierId,s.name as supplierName,pd.string1 as contractNo,pd.string25 as contractSpecial
        from  biz_product_ref pr
        join biz_process_child pc on pc.data_id=#{dataId} and pr.product_ref_id=pc.string5
        left join biz_data_status ds on ds.child_id=pc.child_id and ds.string2=pr.product_ref_id
        join biz_process_data pd on pc.data_id=pd.data_id
        left join biz_dict d1 on d1.dict_id=pr.specifications
        left join biz_dict d2 on d2.dict_id=pr.valvebody_material
        left join biz_suppliers s on s.suppliers_id=pr.suppliers_id
        where
        pr.type=1
        <!--
        concat(pr.name,pr.model,pr.specifications) in (
      select concat(p1.name,p1.model,p1.specifications) from biz_product_ref p1
      join biz_process_child pc1 on pc1.data_id=#{dataId} and pc1.string5=p1.product_ref_id
      where p1.type=1 <if test="supplierId != null and supplierId != ''">and p1.suppliers_Id=#{supplierId} </if>
    ) and
        and pr.string1=#{levelLabel} -->
    </sql>
    <select id="selectBizChildRef1List" parameterType="BizProcessChild" resultMap="BizProcessChildResult">
        <include refid="selectBizChildRef1Vo"/>
        <if test="bizEditFlag == 0 ">and ifnull(ds.data_status,'0') = '0'</if>
        <!-- 如果是详情，只看有数据 -->
        <if test="bizEditFlag == 2">and ds.string4 = #{procurementId} </if>
        <if test="dataStatus == 1">and ds.data_status = #{dataStatus} </if>
        <if test="dataStatus == -1">and ds.data_status is null </if>
        <if test="supplierId != null and supplierId != ''">and s.suppliers_id=#{supplierId} </if>
        group by pr.product_ref_id
        order by pr.string1,pr.suppliers_id
    </select>


    <!-- 质检 法兰螺栓信息 -->
    <sql id="selectBizTestRef1Vo">
    select
      pr.type,
      pr.product_ref_id as productRef1Id,ds.string4 as dataId,ds.child_id as childId,sn.remark,ds.status_id as statusId,
      ds.string1  as productRef1Num,
          pr.name as ref1Name,pr.price as ref1Price,
          pr.string2 as ref1String2,d1.name as  ref1Specifications,d2.name  as ref1ValvebodyMaterial,
          pr.material_require as ref1MaterialRequire,s.name as  suppliersName,pr.model,
          ds.product_status as productStatus,ds.data_status as dataStatus,
          ds.string4 as procurementId,pr.string1 as levelValue,s.suppliers_id as supplierId,s.name as supplierName,
          COALESCE(sum(sn.string1),0) as yesNum, COALESCE(sum(sn.string2),0) as noNum,ss.num as stayNum,ss.create_time as stayCreateTime,ss.stay_id as stayId,ss.string6 as orderNo,
          da1.string1 as contractNo,da.string12 as procurementNo,da1.string25 as contractSpecial
          from  biz_product_ref pr
    join biz_data_status ds on   ds.string2=pr.product_ref_id and ds.string4=#{dataId} and ds.type=3
      left join biz_data_steststay ss on ss.status_id=ds.status_id
      left join biz_process_data da on ss.string4=da.data_id
      left join biz_process_data da1 on ds.string3=da1.data_id
      left join biz_data_stestn sn on sn.status_id=ds.status_id  and sn.string6=ss.stay_id
    left join biz_dict d1 on d1.dict_id=pr.specifications
	 left join biz_dict d2 on d2.dict_id=pr.valvebody_material
	 left join biz_suppliers s on s.suppliers_id=pr.suppliers_id
    where 1=1 and pr.type=1
    </sql>
    <select id="selectBizTestRef1List" parameterType="BizProcessChild" resultMap="BizProcessChildResult">
        <include refid="selectBizTestRef1Vo"/>
        <if test="orderNo != null">and ss.string6 like concat('%', #{orderNo}, '%')</if>
        <if test="contractNo != null">and da.string10 like concat('%', #{contractNo}, '%')</if>
        <if test="procurementNo != null">and da.string12 like concat('%', #{procurementNo}, '%')</if>
        <if test="queryStatus == 0">and ss.string1 = '0' group by ss.stay_id order by ss.create_time</if>
        <if test="queryStatus == null">group by ds.status_id order by pr.string1,pr.suppliers_id</if>
    </select>

    <!-- 采购池 螺栓信息 -->
    <sql id="selectBizChildRef2Vo">
        select pd.string3 guishudanwei,
        pr.product_ref_id as productRef2Id,
        (case when ds.data_status='1' then ds.string1 else sum(pc.string9) end) as productRef2Num,
        pc.string7 as productRef1Coefficient,pr.name as ref2Name,pr.price as ref2Price,
        pr.string2 as ref1String2,d1.name as  ref1Specifications,d2.name  as ref1ValvebodyMaterial,
        pr.material_require as ref1MaterialRequire,s.name as  suppliersName,pr.model,pd.string6 as goodsTime,
        ds.product_status as productStatus,ds.actuator_status as actuatorStatus,ds.ref1_status as ref1Status,ds.ref2_status as ref2Status,ds.p_status as pStatus,
        ds.p1_status as p1Status,ds.p2_status as p2Status,ds.p3_status as p3Status,ds.p4_status as p4Status,pc.data_id as dataId,pc.child_id as childId,ds.data_status as dataStatus,
        ds.string4 as procurementId,'A' as levelValue,s.suppliers_id as supplierId,s.name as supplierName,pd.string1 as contractNo,pd.string25 as contractSpecial
        from  biz_product_ref pr
        join biz_process_child pc on pc.data_id=#{dataId} and pr.product_ref_id=pc.string8
        left join biz_data_status ds on ds.child_id=pc.child_id and ds.string2=pr.product_ref_id
        join biz_process_data pd on pc.data_id=pd.data_id
        left join biz_dict d1 on d1.dict_id=pr.specifications
        left join biz_dict d2 on d2.dict_id=pr.valvebody_material
        left join biz_suppliers s on s.suppliers_id=pr.suppliers_id
        where

        pr.type=2
        <!--
        concat(pr.name,pr.model,pr.valvebody_material) in (
      select concat(p1.name,p1.model,p1.valvebody_material) from biz_product_ref p1
      join biz_process_child pc1 on pc1.data_id=#{dataId} and pc1.string8=p1.product_ref_id
      where p1.type=2 <if test="supplierId != null and supplierId != ''">and p1.suppliers_Id=#{supplierId} </if>
    ) and  and pr.string1=#{levelLabel} -->
    </sql>
    <select id="selectBizChildRef2List" parameterType="BizProcessChild" resultMap="BizProcessChildResult">
        <include refid="selectBizChildRef2Vo"/>
        <if test="bizEditFlag == 0 ">and ifnull(ds.data_status,'0') = '0'</if>
        <!-- 如果是详情，只看有数据 -->
        <if test="bizEditFlag == 2">and ds.string4 = #{procurementId} </if>
        <if test="dataStatus == 1">and ds.data_status = #{dataStatus} </if>
        <if test="dataStatus == -1">and ds.data_status is null </if>
        <if test="supplierId != null and supplierId != ''">and s.suppliers_id=#{supplierId} </if>
        group by pr.product_ref_id
        order by pr.string8,pr.suppliers_id
    </select>



    <!-- 质检 螺栓信息 -->
    <sql id="selectBizTestRef2Vo">
    select
      pr.product_ref_id as productRef2Id,ds.string4 as dataId,ds.child_id as childId,sn.remark,ds.status_id as statusId,
      ds.string1 as productRef2Num,
      pr.name as ref2Name,pr.price as ref2Price,
      pr.string2 as ref1String2,d1.name as  ref1Specifications,d2.name  as ref1ValvebodyMaterial,
          pr.material_require as ref1MaterialRequire,s.name as  suppliersName,pr.model,
          ds.data_status as dataStatus,
          ds.string4 as procurementId,pr.string1 as levelValue,s.suppliers_id as supplierId,s.name as supplierName,
          COALESCE(sum(sn.string1),0) as yesNum, COALESCE(sum(sn.string2),0) as noNum,ss.num as stayNum,ss.create_time as stayCreateTime,ss.stay_id as stayId,ss.string6 as orderNo,
          da1.string1 as contractNo,da.string12 as procurementNo,da1.string25 as contractSpecial
          from  biz_product_ref pr
    join biz_data_status ds on   ds.string2=pr.product_ref_id and ds.string4=#{dataId} and ds.type=4
      left join biz_data_steststay ss on ss.status_id=ds.status_id
      left join biz_process_data da on ss.string4=da.data_id
      left join biz_process_data da1 on ds.string3=da1.data_id
      left join biz_data_stestn sn on sn.status_id=ds.status_id  and sn.string6=ss.stay_id
    left join biz_dict d1 on d1.dict_id=pr.specifications
	 left join biz_dict d2 on d2.dict_id=pr.valvebody_material
	 left join biz_suppliers s on s.suppliers_id=pr.suppliers_id
    where 1=1 and pr.type=2
    </sql>
    <select id="selectBizTestRef2List" parameterType="BizProcessChild" resultMap="BizProcessChildResult">
        <include refid="selectBizTestRef2Vo"/>
        <if test="orderNo != null">and ss.string6 like concat('%', #{orderNo}, '%')</if>
        <if test="contractNo != null">and da.string10 like concat('%', #{contractNo}, '%')</if>
        <if test="procurementNo != null">and da.string12 like concat('%', #{procurementNo}, '%')</if>
        <if test="queryStatus == 0">and ss.string1 = '0' group by ss.stay_id order by ss.create_time</if>
        <if test="queryStatus == null">group by ds.status_id order by pr.string8,pr.suppliers_id</if>

    </select>

    <!-- 定位器 -->
    <sql id="selectBizChildPAVo">
        select pd.string3 guishudanwei,
        pa.attachment_id as pattachmentId,pa.bh as pattachmentName, pc.pattachment_price as pattachmentPrice,
        (case when ds.data_status='1' then ds.string1 else sum(pc.pattachment_count) end) as pattachmentCount,
        pc.pattachment_coefficient as pattachmentCoefficient,
        pa.type, pa.bh, pa.chinese_name as chineseName, pa.chinese_specifications as chineseSpecifications, pa.english_name as englishName,
        pa.english_specifications as englishSpecifications, pa.chinese_packaging as chinesePackaging, pa.english_packaging as englishPackaging,
        pa.chinese_unit as chineseUnit, pa.english_unit as englishUnit, pa.pressure, pa.material, pa.bar_code as barCode, pa.customs_bh as customsBh,
        pa.handling_fee as handlingFee, pa.color, pa.developer, pa.goods_category as goodsCategory,pa.settlement_price as procurementPrice,s.name as supplierName,
        pd.string6 as goodsTime,
        ds.product_status as productStatus,ds.actuator_status as actuatorStatus,ds.ref1_status as ref1Status,ds.ref2_status as ref2Status,ds.p_status as pStatus,
        ds.p1_status as p1Status,ds.p2_status as p2Status,ds.p3_status as p3Status,ds.p4_status as p4Status,pc.data_id as dataId,pc.child_id as childId,ds.data_status as dataStatus,
        ds.string4 as procurementId,'A' as levelValue,s.suppliers_id as supplierId,s.nick_name as supplierName,pd.string1 as contractNo,pd.string25 as contractSpecial
        from  biz_product_attachment pa
        join biz_process_child pc on pc.data_id=#{dataId} and pa.attachment_id=pc.pattachment_id
        left join biz_data_status ds on ds.child_id=pc.child_id and ds.string2=pa.attachment_id
        join biz_process_data pd on pc.data_id=pd.data_id
        left join biz_suppliers s on s.suppliers_id=pa.supplier
        where pa.type=1
        <!--
        concat(pa.chinese_name,pa.chinese_specifications) in (
         select concat(p1.chinese_name,p1.chinese_specifications) from biz_product_attachment p1
         join biz_process_child pc1 on pc1.data_id=#{dataId} and pc1.pattachment_id=p1.attachment_id
         where  p1.type=1
       ) and  pa.string1=#{levelLabel} -->
    </sql>
    <select id="selectBizChildPAList" parameterType="BizProcessChild" resultMap="BizProcessChildResult">
        <include refid="selectBizChildPAVo"/>
        <if test="bizEditFlag == 0 ">and ifnull(ds.data_status,'0') = '0'</if>
        <!-- 如果是详情，只看有数据 -->
        <if test="bizEditFlag == 2">and ds.string4 = #{procurementId} </if>
        <if test="dataStatus == 1">and ds.data_status = #{dataStatus} </if>
        <if test="dataStatus == -1">and ds.data_status is null </if>
        <if test="supplierId != null and supplierId != ''">and s.suppliers_id=#{supplierId} </if>
        group by pa.attachment_id
        order by pa.string1
    </select>

    <!-- 质检 定位器 -->
    <sql id="selectBizTestPAVo">
    select
      pa.attachment_id as pattachmentId,pa.bh as pattachmentName,ds.string4 as dataId,ds.child_id as childId,sn.remark,ds.status_id as statusId,
      ifnull(ds.string1,0) as pattachmentCount,
      pa.type as paType, pa.bh, pa.chinese_name as chineseName, pa.chinese_specifications as chineseSpecifications, pa.english_name as englishName,
        pa.english_specifications as englishSpecifications, pa.chinese_packaging as chinesePackaging, pa.english_packaging as englishPackaging,
        pa.chinese_unit as chineseUnit, pa.english_unit as englishUnit, pa.pressure, pa.material, pa.bar_code as barCode, pa.customs_bh as customsBh,
         pa.handling_fee as handlingFee, pa.color, pa.developer, pa.goods_category as goodsCategory,ifnull(pa.settlement_price,0) as procurementPrice,s.name as supplierName,
         ds.data_status as dataStatus,
          ds.string4 as procurementId,pa.string1 as levelValue,s.suppliers_id as supplierId,s.nick_name as supplierName,
          COALESCE(sum(sn.string1),0) as yesNum, COALESCE(sum(sn.string2),0) as noNum,ss.num as stayNum,ss.create_time as stayCreateTime,ss.stay_id as stayId,ss.string6 as orderNo,
          da1.string1 as contractNo,da.string12 as procurementNo,da1.string25 as contractSpecial,ifnull(pa.cost_price,0) as costPrice
          from  biz_product_attachment pa
    join biz_data_status ds on   ds.string2=pa.attachment_id and ds.string4=#{dataId} and ds.type > 4
      left join biz_data_steststay ss on ss.status_id=ds.status_id
      left join biz_process_data da on ss.string4=da.data_id
      left join biz_process_data da1 on ds.string3=da1.data_id
      left join biz_data_stestn sn on sn.status_id=ds.status_id  and sn.string6=ss.stay_id
    left join biz_suppliers s on s.suppliers_id=pa.supplier
    where 1=1
    </sql>
    <select id="selectBizTestPAList" parameterType="BizProcessChild" resultMap="BizProcessChildResult">
        <include refid="selectBizTestPAVo"/>
        <if test="orderNo != null">and ss.string6 like concat('%', #{orderNo}, '%')</if>
        <if test="contractNo != null">and da.string10 like concat('%', #{contractNo}, '%')</if>
        <if test="procurementNo != null">and da.string12 like concat('%', #{procurementNo}, '%')</if>
        <if test="queryStatus == 0">and ss.string1 = '0' group by ss.stay_id order by ss.create_time</if>
        <if test="queryStatus == null">group by ds.status_id order by pa.string1</if>

    </select>



    <!-- 电磁阀-->
    <sql id="selectBizChildPA1Vo">
        select pd.string3 guishudanwei,
        pa.attachment_id as pattachment1Id,pa.bh as pattachment1Name, pc.pattachment1_price as pattachment1Price,
        (case when ds.data_status='1' then ds.string1 else sum(pc.pattachment1_count) end) as pattachment1Count,
        pc.pattachment1_coefficient as pattachment1Coefficient,
        pa.type, pa.bh, pa.chinese_name as chineseName, pa.chinese_specifications as chineseSpecifications, pa.english_name as englishName,
        pa.english_specifications as englishSpecifications, pa.chinese_packaging as chinesePackaging, pa.english_packaging as englishPackaging,
        pa.chinese_unit as chineseUnit, pa.english_unit as englishUnit, pa.pressure, pa.material, pa.bar_code as barCode, pa.customs_bh as customsBh,
        pa.handling_fee as handlingFee, pa.color, pa.developer, pa.goods_category as goodsCategory,pa.settlement_price as procurementPrice,s.name as supplierName,
        pd.string6 as goodsTime,
        ds.product_status as productStatus,ds.actuator_status as actuatorStatus,ds.ref1_status as ref1Status,ds.ref2_status as ref2Status,ds.p_status as pStatus,
        ds.p1_status as p1Status,ds.p2_status as p2Status,ds.p3_status as p3Status,ds.p4_status as p4Status,pc.data_id as dataId,pc.child_id as childId,ds.data_status as dataStatus,
        ds.string4 as procurementId,'A' as levelValue,s.suppliers_id as supplierId,s.nick_name as supplierName,pd.string1 as contractNo,pd.string25 as contractSpecial,
        ifnull(pa.cost_price,0) as costPrice

        from  biz_product_attachment pa
        join biz_process_child pc on pc.data_id=#{dataId} and pa.attachment_id=pc.pattachment1_id
        left join biz_data_status ds on ds.child_id=pc.child_id and ds.string2=pa.attachment_id
        join biz_process_data pd on pc.data_id=pd.data_id
        left join biz_suppliers s on s.suppliers_id=pa.supplier
        where pa.type=2
        <!--
        concat(pa.chinese_name,pa.chinese_specifications) in (
          select concat(p1.chinese_name,p1.chinese_specifications) from biz_product_attachment p1
          join biz_process_child pc1 on pc1.data_id=#{dataId} and pc1.pattachment1_id=p1.attachment_id
          where  p1.type=2
        ) and  pa.string1=#{levelLabel} -->
    </sql>
    <select id="selectBizChildPA1List" parameterType="BizProcessChild" resultMap="BizProcessChildResult">
        <include refid="selectBizChildPA1Vo"/>
        <!-- 如果是详情，只看有数据 -->
        <if test="bizEditFlag == 2">and ds.string4 = #{procurementId} </if>
        <if test="dataStatus == 1">and ds.data_status = #{dataStatus} </if>
        <if test="dataStatus == -1">and ds.data_status is null </if>
        <if test="supplierId != null and supplierId != ''">and s.suppliers_id=#{supplierId} </if>
        group by pa.attachment_id
        order by pa.string1
    </select>

    <!-- 回信器数 -->
    <sql id="selectBizChildPA2Vo">
        select pd.string3 guishudanwei,
        pa.attachment_id as pattachment2Id,pa.bh as pattachment2Name, pc.pattachment2_price as pattachment2Price,
        (case when ds.data_status='1' then ds.string1 else sum(pc.pattachment2_count) end) as pattachment2Count,
        pc.pattachment2_coefficient as pattachment2Coefficient,
        pa.type, pa.bh, pa.chinese_name as chineseName, pa.chinese_specifications as chineseSpecifications, pa.english_name as englishName,
        pa.english_specifications as englishSpecifications, pa.chinese_packaging as chinesePackaging, pa.english_packaging as englishPackaging,
        pa.chinese_unit as chineseUnit, pa.english_unit as englishUnit, pa.pressure, pa.material, pa.bar_code as barCode, pa.customs_bh as customsBh,
        pa.handling_fee as handlingFee, pa.color, pa.developer, pa.goods_category as goodsCategory,pa.settlement_price as procurementPrice,s.name as supplierName,
        pd.string6 as goodsTime,
        ds.product_status as productStatus,ds.actuator_status as actuatorStatus,ds.ref1_status as ref1Status,ds.ref2_status as ref2Status,ds.p_status as pStatus,
        ds.p1_status as p1Status,ds.p2_status as p2Status,ds.p3_status as p3Status,ds.p4_status as p4Status,pc.data_id as dataId,pc.child_id as childId,ds.data_status as dataStatus,
        ds.string4 as procurementId,'A' as levelValue,s.suppliers_id as supplierId,s.nick_name as supplierName,pd.string1 as contractNo,pd.string25 as contractSpecial

        from  biz_product_attachment pa
        join biz_process_child pc on pc.data_id=#{dataId} and pa.attachment_id=pc.pattachment2_id
        left join biz_data_status ds on ds.child_id=pc.child_id and ds.string2=pa.attachment_id
        join biz_process_data pd on pc.data_id=pd.data_id
        left join biz_suppliers s on s.suppliers_id=pa.supplier
        where
        pa.type=3
        <!--
        concat(pa.chinese_name,pa.chinese_specifications) in (
          select concat(p1.chinese_name,p1.chinese_specifications) from biz_product_attachment p1
          join biz_process_child pc1 on pc1.data_id=#{dataId} and pc1.pattachment2_id=p1.attachment_id
          where  p1.type=3
        ) and  pa.string1=#{levelLabel} -->
    </sql>
    <select id="selectBizChildPA2List" parameterType="BizProcessChild" resultMap="BizProcessChildResult">
        <include refid="selectBizChildPA2Vo"/>
        <if test="dataStatus == 1">and ds.data_status = #{dataStatus} </if>
        <if test="dataStatus == -1">and ds.data_status is null </if>
        <if test="supplierId != null and supplierId != ''">and s.suppliers_id=#{supplierId} </if>
        group by pa.attachment_id
        order by pa.string1
    </select>
    <!-- 气源三连件 -->
    <sql id="selectBizChildPA3Vo">
        select pd.string3 guishudanwei,
        pa.attachment_id as pattachment3Id,pa.bh as pattachment3Name,
        pc.pattachment3_price as pattachment3Price,
        (case when ds.data_status='1' then ds.string1 else sum(pc.pattachment3_count) end) as pattachment3Count,
        pc.pattachment3_coefficient as pattachment3Coefficient,
        pa.type, pa.bh, pa.chinese_name as chineseName, pa.chinese_specifications as chineseSpecifications, pa.english_name as englishName,
        pa.english_specifications as englishSpecifications, pa.chinese_packaging as chinesePackaging, pa.english_packaging as englishPackaging,
        pa.chinese_unit as chineseUnit, pa.english_unit as englishUnit, pa.pressure, pa.material, pa.bar_code as barCode, pa.customs_bh as customsBh,
        pa.handling_fee as handlingFee, pa.color, pa.developer, pa.goods_category as goodsCategory,pa.settlement_price as procurementPrice,s.name as supplierName,
        pd.string6 as goodsTime,
        ds.product_status as productStatus,ds.actuator_status as actuatorStatus,ds.ref1_status as ref1Status,ds.ref2_status as ref2Status,ds.p_status as pStatus,
        ds.p1_status as p1Status,ds.p2_status as p2Status,ds.p3_status as p3Status,ds.p4_status as p4Status,pc.data_id as dataId,pc.child_id as childId,ds.data_status as dataStatus,
        ds.string4 as procurementId,'A' as levelValue,s.suppliers_id as supplierId,s.nick_name as supplierName,pd.string1 as contractNo,pd.string25 as contractSpecial


        from  biz_product_attachment pa
        join biz_process_child pc on pc.data_id=#{dataId} and pa.attachment_id=pc.pattachment3_id
        left join biz_data_status ds on ds.child_id=pc.child_id and ds.string2=pa.attachment_id
        join biz_process_data pd on pc.data_id=pd.data_id
        left join biz_suppliers s on s.suppliers_id=pa.supplier
        where pa.type=4
        <!--
        concat(pa.chinese_name,pa.chinese_specifications) in (
          select concat(p1.chinese_name,p1.chinese_specifications) from biz_product_attachment p1
          join biz_process_child pc1 on pc1.data_id=#{dataId} and pc1.pattachment3_id=p1.attachment_id
          where  p1.type=4
        ) and  pa.string1=#{levelLabel} and -->
    </sql>
    <select id="selectBizChildPA3List" parameterType="BizProcessChild" resultMap="BizProcessChildResult">
        <include refid="selectBizChildPA3Vo"/>
        <!-- 如果是详情，只看有数据 -->
        <if test="bizEditFlag == 2">and ds.string4 = #{procurementId} </if>
        <if test="dataStatus == 1">and ds.data_status = #{dataStatus} </if>
        <if test="dataStatus == -1">and ds.data_status is null </if>
        <if test="supplierId != null and supplierId != ''">and s.suppliers_id=#{supplierId} </if>
        group by pa.attachment_id
        order by pa.string1
    </select>
    <!-- 可离合减速器 -->
    <sql id="selectBizChildPA4Vo">
        select pd.string3 guishudanwei,
        pa.attachment_id as pattachment4Id,pa.bh as pattachment4Name, pc.pattachment4_price as pattachment4Price,
        (case when ds.data_status='1' then ds.string1 else sum(pc.pattachment4_count) end) as pattachment4Count,
        pc.pattachment4_coefficient as pattachment4Coefficient,
        pa.type, pa.bh, pa.chinese_name as chineseName, pa.chinese_specifications as chineseSpecifications, pa.english_name as englishName,
        pa.english_specifications as englishSpecifications, pa.chinese_packaging as chinesePackaging, pa.english_packaging as englishPackaging,
        pa.chinese_unit as chineseUnit, pa.english_unit as englishUnit, pa.pressure, pa.material, pa.bar_code as barCode, pa.customs_bh as customsBh,
        pa.handling_fee as handlingFee, pa.color, pa.developer, pa.goods_category as goodsCategory,pa.settlement_price as procurementPrice,s.name as supplierName,
        pd.string6 as goodsTime,
        ds.product_status as productStatus,ds.actuator_status as actuatorStatus,ds.ref1_status as ref1Status,ds.ref2_status as ref2Status,ds.p_status as pStatus,
        ds.p1_status as p1Status,ds.p2_status as p2Status,ds.p3_status as p3Status,ds.p4_status as p4Status,pc.data_id as dataId,pc.child_id as childId,ds.data_status as dataStatus,
        ds.string4 as procurementId,'A' as levelValue,s.suppliers_id as supplierId,s.nick_name as supplierName,pd.string1 as contractNo,pd.string25 as contractSpecial
        from  biz_product_attachment pa
        join biz_process_child pc on pc.data_id=#{dataId} and pa.attachment_id=pc.pattachment4_id
        left join biz_data_status ds on ds.child_id=pc.child_id and ds.string2=pa.attachment_id
        join biz_process_data pd on pc.data_id=pd.data_id
        left join biz_suppliers s on s.suppliers_id=pa.supplier
        where pa.type=5
        <!--
        concat(pa.chinese_name,pa.chinese_specifications) in (
          select concat(p1.chinese_name,p1.chinese_specifications) from biz_product_attachment p1
          join biz_process_child pc1 on pc1.data_id=#{dataId} and pc1.pattachment4_id=p1.attachment_id
          where  p1.type=5
        ) and  pa.string1=#{levelLabel} -->
    </sql>
    <select id="selectBizChildPA4List" parameterType="BizProcessChild" resultMap="BizProcessChildResult">
        <include refid="selectBizChildPA4Vo"/>
        <!-- 如果是详情，只看有数据 -->
        <if test="bizEditFlag == 2">and ds.string4 = #{procurementId} </if>
        <if test="dataStatus == 1">and ds.data_status = #{dataStatus} </if>
        <if test="dataStatus == -1">and ds.data_status is null </if>
        <if test="supplierId != null and supplierId != ''">and s.suppliers_id=#{supplierId} </if>
        group by pa.attachment_id
        order by pa.string1
    </select>


    <sql id="selectBizTestChildVo">
    select sn.test_id as testId,sn.remark,sn.status_id,
    sn.string1 as yesNum,sn.string2 as noNum,
      u.user_name as createByName,sn.create_time,ss.string6 as orderNo
    from  biz_data_stestn sn
    join biz_data_steststay ss on ss.stay_id=sn.string6
    left join sys_user u on sn.create_by=u.user_id
    where 1=1 and sn.string3=#{paramterId} and sn.string4=#{dataId} and sn.string5=#{childId} and ss.stay_id=#{stayId}
    </sql>
    <select id="selectBizTestChildList" parameterType="BizProcessChild" resultMap="BizProcessChildResult">
        <include refid="selectBizTestChildVo"/>
        order by sn.create_time desc
    </select>


    <sql id="selectBizTestChildHistoryVo">
    select distinct sn.test_id as testId,sn.remark,sn.status_id, sn.string1 as yesNum,sn.string2 as noNum, u.user_name as createByName,
    sn.create_time,ss.string6 as orderNo,
    ss.string6 as  bjNo,d1.string1 as contractNo,d.string12 as procurementNo,c.string2 as paType,c.string6 as string6,c.string8 as string8
    ,c.string7 as string7
    from biz_data_stestn sn
    join biz_data_steststay ss on ss.stay_id=sn.string6
    left join biz_process_child c on c.string12=ss.stay_id
    left join sys_user u on sn.create_by=u.user_id
    left join biz_process_data d on d.biz_id='procurement' and d.data_id=ss.string4
    left join biz_data_status s on s.status_id=sn.status_id
    left join biz_process_data d1 on d1.biz_id='contract' and d1.data_id=s.string3
    where 1=1

    </sql>
    <select id="selectBizTestChildHistoryList" parameterType="BizProcessChild" resultMap="BizProcessChildResult">
        <include refid="selectBizTestChildHistoryVo"/>

        <if test="bjNo != null and bjNo != ''">and ss.string6 like concat('%', #{bjNo}, '%')</if>
        <if test="contractNo != null and contractNo != ''">and d1.string1 like concat('%', #{contractNo}, '%')</if>
        <if test="procurementNo != null and procurementNo != ''">and d.string12 like concat('%', #{procurementNo}, '%')</if>

        order by sn.create_time desc
    </select>


    <sql id="selectBizTestStayChildVo">
    select sn.stay_id as stayId,sn.remark,sn.status_id,
    sn.num as stayNum,
      u.user_name as createByName,sn.create_time,sn.string6 as orderNo
    from  biz_data_steststay sn
    left join sys_user u on sn.create_by=u.user_id
    where 1=1 and sn.string3=#{paramterId} and sn.string4=#{dataId} and sn.string5=#{childId}
    </sql>
    <select id="selectBizTestStayChildList" parameterType="BizProcessChild" resultMap="BizProcessChildResult">
        <include refid="selectBizTestStayChildVo"/>
        order by sn.create_time desc
    </select>

    <insert id="insertBizProcessChild" parameterType="BizProcessChild" useGeneratedKeys="true" keyProperty="childId">
        insert into biz_process_child
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="dataId != null ">data_id,</if>
            <if test="remark != null  and remark != ''">remark,</if>
            <if test="price1 != null ">price1,</if>
            <if test="price2 != null ">price2,</if>
            <if test="price3 != null ">price3,</if>
            <if test="price4 != null ">price4,</if>
            <if test="price5 != null ">price5,</if>
            <if test="price6 != null ">price6,</if>
            <if test="price7 != null ">price7,</if>
            <if test="price8 != null ">price8,</if>
            <if test="price9 != null ">price9,</if>
            <if test="price10 != null ">price10,</if>
            <if test="string1 != null  and string1 != ''">string1,</if>
            <if test="string2 != null  and string2 != ''">string2,</if>
            <if test="string3 != null  and string3 != ''">string3,</if>
            <if test="string4 != null  and string4 != ''">string4,</if>
            <if test="string5 != null  and string5 != ''">string5,</if>
            <if test="string6 != null  and string6 != ''">string6,</if>
            <if test="string7 != null  and string7 != ''">string7,</if>
            <if test="string8 != null  and string8 != ''">string8,</if>
            <if test="string9 != null  and string9 != ''">string9,</if>
            <if test="string10 != null  and string10 != ''">string10,</if>
            <if test="string11 != null  and string11 != ''">string11,</if>
            <if test="string12 != null  and string12 != ''">string12,</if>
            <if test="string13 != null  and string13 != ''">string13,</if>
            <if test="string14 != null  and string14 != ''">string14,</if>
            <if test="string15 != null  and string15 != ''">string15,</if>
            <if test="string16 != null  and string16 != ''">string16,</if>
            <if test="string17 != null  and string17 != ''">string17,</if>
            <if test="string18 != null  and string18 != ''">string18,</if>
            <if test="string19 != null  and string19 != ''">string19,</if>
            <if test="string20 != null  and string20 != ''">string20,</if>
            <if test="datetime1 != null ">datetime1,</if>
            <if test="datetime2 != null ">datetime2,</if>
            <if test="datetime3 != null ">datetime3,</if>
            <if test="datetime4 != null ">datetime4,</if>
            <if test="datetime5 != null ">datetime5,</if>
            <if test="status != null  and status != ''">status,</if>
            <if test="delFlag != null  and delFlag != ''">del_flag,</if>
            <if test="createBy != null  and createBy != ''">create_by,</if>
            <if test="createTime != null ">create_time,</if>
            <if test="updateBy != null  and updateBy != ''">update_by,</if>
            <if test="updateTime != null ">update_time,</if>

            <if test="pattachmentId != null  and pattachmentId != ''">pattachment_id,</if>
            <if test="pattachment1Id != null  and pattachment1Id != ''">pattachment1_id,</if>
            <if test="pattachment2Id != null  and pattachment2Id != ''">pattachment2_id,</if>
            <if test="pattachment3Id != null  and pattachment3Id != ''">pattachment3_id,</if>
            <if test="pattachment4Id != null  and pattachment4Id != ''">pattachment4_id,</if>

            <if test="pattachmentCount != null  and pattachmentCount != ''">pattachment_count,</if>
            <if test="pattachment1Count != null  and pattachment1Count != ''">pattachment1_count,</if>
            <if test="pattachment2Count != null  and pattachment2Count != ''">pattachment2_count,</if>
            <if test="pattachment3Count != null  and pattachment3Count != ''">pattachment3_count,</if>
            <if test="pattachment4Count != null  and pattachment4Count != ''">pattachment4_count,</if>

            <if test="pattachmentPrice != null  and pattachmentPrice != ''">pattachment_price,</if>
            <if test="pattachment1Price != null  and pattachment1Price != ''">pattachment1_price,</if>
            <if test="pattachment2Price != null  and pattachment2Price != ''">pattachment2_price,</if>
            <if test="pattachment3Price != null  and pattachment3Price != ''">pattachment3_price,</if>
            <if test="pattachment4Price != null  and pattachment4Price != ''">pattachment4_price,</if>

            <if test="pattachmentCoefficient != null  and pattachmentCoefficient != ''">pattachment_coefficient,</if>
            <if test="pattachment1Coefficient != null  and pattachment1Coefficient != ''">pattachment1_coefficient,</if>
            <if test="pattachment2Coefficient != null  and pattachment2Coefficient != ''">pattachment2_coefficient,</if>
            <if test="pattachment3Coefficient != null  and pattachment3Coefficient != ''">pattachment3_coefficient,</if>
            <if test="pattachment4Coefficient != null  and pattachment4Coefficient != ''">pattachment4_coefficient,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="dataId != null ">#{dataId},</if>
            <if test="remark != null  and remark != ''">#{remark},</if>
            <if test="price1 != null ">#{price1},</if>
            <if test="price2 != null ">#{price2},</if>
            <if test="price3 != null ">#{price3},</if>
            <if test="price4 != null ">#{price4},</if>
            <if test="price5 != null ">#{price5},</if>
            <if test="price6 != null ">#{price6},</if>
            <if test="price7 != null ">#{price7},</if>
            <if test="price8 != null ">#{price8},</if>
            <if test="price9 != null ">#{price9},</if>
            <if test="price10 != null ">#{price10},</if>
            <if test="string1 != null  and string1 != ''">#{string1},</if>
            <if test="string2 != null  and string2 != ''">#{string2},</if>
            <if test="string3 != null  and string3 != ''">#{string3},</if>
            <if test="string4 != null  and string4 != ''">#{string4},</if>
            <if test="string5 != null  and string5 != ''">#{string5},</if>
            <if test="string6 != null  and string6 != ''">#{string6},</if>
            <if test="string7 != null  and string7 != ''">#{string7},</if>
            <if test="string8 != null  and string8 != ''">#{string8},</if>
            <if test="string9 != null  and string9 != ''">#{string9},</if>
            <if test="string10 != null  and string10 != ''">#{string10},</if>
            <if test="string11 != null  and string11 != ''">#{string11},</if>
            <if test="string12 != null  and string12 != ''">#{string12},</if>
            <if test="string13 != null  and string13 != ''">#{string13},</if>
            <if test="string14 != null  and string14 != ''">#{string14},</if>
            <if test="string15 != null  and string15 != ''">#{string15},</if>
            <if test="string16 != null  and string16 != ''">#{string16},</if>
            <if test="string17 != null  and string17 != ''">#{string17},</if>
            <if test="string18 != null  and string18 != ''">#{string18},</if>
            <if test="string19 != null  and string19 != ''">#{string19},</if>
            <if test="string20 != null  and string20 != ''">#{string20},</if>
            <if test="datetime1 != null ">#{datetime1},</if>
            <if test="datetime2 != null ">#{datetime2},</if>
            <if test="datetime3 != null ">#{datetime3},</if>
            <if test="datetime4 != null ">#{datetime4},</if>
            <if test="datetime5 != null ">#{datetime5},</if>
            <if test="status != null  and status != ''">#{status},</if>
            <if test="delFlag != null  and delFlag != ''">#{delFlag},</if>
            <if test="createBy != null  and createBy != ''">#{createBy},</if>
            <if test="createTime != null ">#{createTime},</if>
            <if test="updateBy != null  and updateBy != ''">#{updateBy},</if>
            <if test="updateTime != null ">#{updateTime},</if>

            <if test="pattachmentId != null  and pattachmentId != ''">#{pattachmentId},</if>
            <if test="pattachment1Id != null  and pattachment1Id != ''">#{pattachment1Id},</if>
            <if test="pattachment2Id != null  and pattachment2Id != ''">#{pattachment2Id},</if>
            <if test="pattachment3Id != null  and pattachment3Id != ''">#{pattachment3Id},</if>
            <if test="pattachment4Id != null  and pattachment4Id != ''">#{pattachment4Id},</if>

            <if test="pattachmentCount != null  and pattachmentCount != ''">#{pattachmentCount},</if>
            <if test="pattachment1Count != null  and pattachment1Count != ''">#{pattachment1Count},</if>
            <if test="pattachment2Count != null  and pattachment2Count != ''">#{pattachment2Count},</if>
            <if test="pattachment3Count != null  and pattachment3Count != ''">#{pattachment3Count},</if>
            <if test="pattachment4Count != null  and pattachment4Count != ''">#{pattachment4Count},</if>

            <if test="pattachmentPrice != null  and pattachmentPrice != ''">#{pattachmentPrice},</if>
            <if test="pattachment1Price != null  and pattachment1Price != ''">#{pattachment1Price},</if>
            <if test="pattachment2Price != null  and pattachment2Price != ''">#{pattachment2Price},</if>
            <if test="pattachment3Price != null  and pattachment3Price != ''">#{pattachment3Price},</if>
            <if test="pattachment4Price != null  and pattachment4Price != ''">#{pattachment4Price},</if>

            <if test="pattachmentCoefficient != null  and pattachmentCoefficient != ''">#{pattachmentCoefficient},</if>
            <if test="pattachment1Coefficient != null  and pattachment1Coefficient != ''">#{pattachment1Coefficient},
            </if>
            <if test="pattachment2Coefficient != null  and pattachment2Coefficient != ''">#{pattachment2Coefficient},
            </if>
            <if test="pattachment3Coefficient != null  and pattachment3Coefficient != ''">#{pattachment3Coefficient},
            </if>
            <if test="pattachment4Coefficient != null  and pattachment4Coefficient != ''">#{pattachment4Coefficient},
            </if>
        </trim>
    </insert>

    <update id="updateBizProcessChild" parameterType="BizProcessChild">
        update biz_process_child
        <trim prefix="SET" suffixOverrides=",">
            <if test="dataId != null ">data_id = #{dataId},</if>
            <if test="remark != null  and remark != ''">remark = #{remark},</if>
            <if test="price1 != null ">price1 = #{price1},</if>
            <if test="price2 != null ">price2 = #{price2},</if>
            <if test="price3 != null ">price3 = #{price3},</if>
            <if test="price4 != null ">price4 = #{price4},</if>
            <if test="price5 != null ">price5 = #{price5},</if>
            <if test="price6 != null ">price6 = #{price6},</if>
            <if test="price7 != null ">price7 = #{price7},</if>
            <if test="price8 != null ">price8 = #{price8},</if>
            <if test="price9 != null ">price9 = #{price9},</if>
            <if test="price10 != null ">price10 = #{price10},</if>
            <if test="string1 != null  and string1 != ''">string1 = #{string1},</if>
            <if test="string2 != null  and string2 != ''">string2 = #{string2},</if>
            <if test="string3 != null  and string3 != ''">string3 = #{string3},</if>
            <if test="string4 != null  and string4 != ''">string4 = #{string4},</if>
            <if test="string5 != null  and string5 != ''">string5 = #{string5},</if>
            <if test="string6 != null  and string6 != ''">string6 = #{string6},</if>
            <if test="string7 != null  and string7 != ''">string7 = #{string7},</if>
            <if test="string8 != null  and string8 != ''">string8 = #{string8},</if>
            <if test="string9 != null  and string9 != ''">string9 = #{string9},</if>
            <if test="string10 != null  and string10 != ''">string10 = #{string10},</if>
            <if test="string11 != null  and string11 != ''">string11 = #{string11},</if>
            <if test="string12 != null  and string12 != ''">string12 = #{string12},</if>
            <if test="string13 != null  and string13 != ''">string13 = #{string13},</if>
            <if test="string14 != null  and string14 != ''">string14 = #{string14},</if>
            <if test="string15 != null  and string15 != ''">string15 = #{string15},</if>
            <if test="string16 != null  and string16 != ''">string16 = #{string16},</if>
            <if test="string17 != null  and string17 != ''">string17 = #{string17},</if>
            <if test="string18 != null  and string18 != ''">string18 = #{string18},</if>
            <if test="string19 != null  and string19 != ''">string19 = #{string19},</if>
            <if test="string20 != null  and string20 != ''">string20 = #{string20},</if>
            <if test="datetime1 != null ">datetime1 = #{datetime1},</if>
            <if test="datetime2 != null ">datetime2 = #{datetime2},</if>
            <if test="datetime3 != null ">datetime3 = #{datetime3},</if>
            <if test="datetime4 != null ">datetime4 = #{datetime4},</if>
            <if test="datetime5 != null ">datetime5 = #{datetime5},</if>
            <if test="status != null  and status != ''">status = #{status},</if>
            <if test="delFlag != null  and delFlag != ''">del_flag = #{delFlag},</if>
            <if test="createBy != null  and createBy != ''">create_by = #{createBy},</if>
            <if test="createTime != null ">create_time = #{createTime},</if>
            <if test="updateBy != null  and updateBy != ''">update_by = #{updateBy},</if>
            <if test="updateTime != null ">update_time = #{updateTime},</if>

            <if test="pattachmentId != null ">pattachment_id = #{pattachmentId},</if>
            <if test="pattachment1Id != null ">pattachment1_id = #{pattachment1Id},</if>
            <if test="pattachment2Id != null ">pattachment2_id = #{pattachment2Id},</if>
            <if test="pattachment3Id != null ">pattachment3_id = #{pattachment3Id},</if>
            <if test="pattachment4Id != null ">pattachment4_id = #{pattachment4Id},</if>

            <if test="pattachmentCount != null ">pattachment_count = #{pattachmentCount},</if>
            <if test="pattachment1Count != null ">pattachment1_count = #{pattachment1Count},</if>
            <if test="pattachment2Count != null ">pattachment2_count = #{pattachment2Count},</if>
            <if test="pattachment3Count != null ">pattachment3_count = #{pattachment3Count},</if>
            <if test="pattachment4Count != null ">pattachment4_count = #{pattachment4Count},</if>

            <if test="pattachmentPrice != null ">pattachment_price = #{pattachmentPrice},</if>
            <if test="pattachment1Price != null ">pattachment1_price = #{pattachment1Price},</if>
            <if test="pattachment2Price != null ">pattachment2_price = #{pattachment2Price},</if>
            <if test="pattachment3Price != null ">pattachment3_price = #{pattachment3Price},</if>
            <if test="pattachment4Price != null ">pattachment4_price = #{pattachment4Price},</if>

            <if test="pattachmentCoefficient != null ">pattachment_coefficient = #{pattachmentCoefficient},</if>
            <if test="pattachment1Coefficient != null ">pattachment1_coefficient = #{pattachment1Coefficient},</if>
            <if test="pattachment2Coefficient != null ">pattachment2_coefficient = #{pattachment2Coefficient},</if>
            <if test="pattachment3Coefficient != null ">pattachment3_coefficient = #{pattachment3Coefficient},</if>
            <if test="pattachment4Coefficient != null ">pattachment4_coefficient = #{pattachment4Coefficient},</if>
        </trim>
        where child_id = #{childId}
    </update>
    <update id="updateBizProcessChildFH" parameterType="BizProcessChild">
        update biz_process_child
        <trim prefix="SET" suffixOverrides=",">

            <if test="string20 != null  and string20 != ''">string20 = #{string20},</if>

        </trim>
        where child_id = #{childId}
    </update>
    <delete id="deleteBizProcessChildById" parameterType="Long">
        delete from biz_process_child where child_id = #{childId}
    </delete>

    <delete id="deleteBizProcessChildByIds" parameterType="String">
        delete from biz_process_child where child_id in
        <foreach item="childId" collection="array" open="(" separator="," close=")">
            #{childId}
        </foreach>
    </delete>

    <delete id="deleteBizProcessChildByDataIds" parameterType="String">
        delete from biz_process_child where data_id in
        <foreach item="dataId" collection="array" open="(" separator="," close=")">
            #{dataId}
        </foreach>
    </delete>

    <select id="selectPaymentedPrice" resultType="java.lang.Double">
        select ifnull(sum(a.price1),0) from biz_process_child a left join biz_process_data b on a.data_id=b.data_id
        where b.biz_id="payment" and b.string6=#{deptId} and a.string2=#{subjectId} and a.datetime1 between #{startDate} and #{endDate}
    </select>

</mapper>